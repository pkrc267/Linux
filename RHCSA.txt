====================================================================================================
====================================================================================================

UNIT 4 : Working with text files

4.1 Regular Expressions.
________________________
use of regex, i.e. regular expressions. use man page : man 7 regex
use of ^  $  |  .   []  ()  {}  *  +  ?
seems similar to globbing, but is different.
regular expressions can be used to with the contents of the files, unlike globbing.

4.2 Using Text tools.
_______________________
using commands:
cat : useful to view contents of a file.
less : useful if the file contents are larger than a page. Shows content in scrollable manner.
	use of backslash '/' followed by any string can help in searching the string.
	eg: /text , will search for all the occurances of string 'text'.
head : displays first 10 lines of any file.
tail : displays last 10 lines of any file.
	
	NOTE: head and tail can be used with '-n' followed by number of lines to display.
	eg: head -n 10 RHCSA.txt

tr: can be used for translation or transformation of the text.
    mostly used with echo command.
    eg: echo hello | tr [:lower:] [:upper:]
      > HELLO
      thus this command translated the lower case string to upper case string.

cut : used to filter out the content of the file for displaying.
     #didn't understand it much.
     eg: cut -f 1 -d : /etc/passwd
     -f 1, causes first column to cut out. by default the columnt delimiter is a TAB.
     -d :, causes to set custom delimiter. we have set the delimiter as :.

sort : sorts the display content according to ASCII values.
	hence, numbers, then capital alphabets, small alphabets, etc.
	to sort according to numbers use -n
	eg: sort -n /'filename'


4.3 Working with grep.
________________________
filtering/searching utility.

grep can be used to find the occurances of any text in complete tree structure.
eg: in the etc folder try
    grep -iR lisa * 2> /dev/null

    -i :stands for ignore case
    -R :stands for recursive or exhaustive scanning of the text, in any kind of file that is present in /etc.
        this will include all the binary files also.

    to avoid results of Binary files, pipe the output through another grep that avoids the Binary files:

    grep -iR lisa * 2> /dev/null | grep -v Binary

    -v : used for avoiding perticular output or presence.


4.4  sed  and  awk  basics
___________________________

historical tools.
while working blindfold.

eg: 
	sed -n /^root/p /etc/passwd
its easier replacemnt can be using grep:
	grep '^root' /etc/passwd
we just used regular expression in the command. the '^root' will output all the lines that start with "root".

sed is a stream editor for filtering and transforming text.
use man pages for furthur detail.
man sed

using awk. use it as a replacement for cut command.
awk is much more smarter than cut.

eg :
	ps aux | grep apache | cut -f 2
in this command, cut fails to recognize the second column. thus,
	ps aux | grep apache | awk '{ print $2 }'
through this, the second column of the grep output will be filtered and displayed.

=================================================================================================================
=================================================================================================================

UNIT 5 : CONNECTING TO RHEL SERVER

5.1 Open the terminal
5.2 Connect using SSH
_____________________
if in a network, connect to the server via ssh using the ip address of the server and the user name, like :
	
	ssh root@10.0.2.15

	NOTE: check the /etc/ssh/sshd_config file for ssh configuration.
	      most of the time root login is turned off for securing the server. you can change that.

try ssh-keygen.

==================================================================================================================
==================================================================================================================
UNIT 6 : MANAGING USERS AND USER GROUPS

6.1 User and Groups
6.2 User accounts
__________________

Note: in primary accounts, there is one user in one group.

6.3 Managing User Accounts
___________________________

 try:
 	man useradd
using the following commands:
	useradd -c CShellUser -e 2017-01-01 -s /bin/tcsh laura
	passwd laura
	<now enter the password. i entered the username laura as password.>

-c : used to enter comments. the comments will be made as GECOS entry for that user.
-e : sets the expiration time of that user. format YYYY-MM-DD.
-s : specifies the shell that user will be associated with. in this case the user is using tcsh.

to see all the users is made:
	tail /etc/passwd
this lists all the users and its related details.
to see if the account works, i.e. if the login is allowed with the user or not.
	tail /etc/shadow

if the password is not set, the entry will be like: laura:!!:...........
the !! shows that no password is set and the user is not allowed ye to login.

6.4 Understanding Group Membership
___________________________________
by default redhat uses private members, i.e. having primary accounts.
use id command for having details of user and its group.

all the groups are mentioned in /etc/group

6.5 Creating and Managing Groups
_________________________________
use groupadd --help

users can be added to a group in two ways,
->by editing and adding the username in the /etc/group file entry of the group.
->by using usermod command.
	
	> groupadd accounts
	> usermod -aG accounts laura

  -aG : append to group

6.6 User and Group Configuration files
_______________________________________

  /etc/login.defs	: contains the default configurations of a user account.
  /etc/defaults/useradd : contains default values of various configurations when a user is made.
  /etc/skel		: acts as default structure when a new user is made. contains files and folders
  			  that are copied to new user home directory.

6.7 Managing Password Properties
________________________________

to manage passwords of users, you must be a root user.
the commands used are:
	passwd --help
UNIT 7 :  
both of them gives details and options to work on passwords.
try:
	chage -l <username>

	this will display the details of the user account.

locking, unlocking and epiration of password:
	passwd -l lisa
		this locks the password for lisa account.
	passwd -u lisa
		this unlocks the password for lisa account.
	passwd -e lisa
		this will cause instant expiration of password, and user will be prompted for changing the password
		the next time he logs in.
 
 performed the exercise of lesson 6 and now moving on.

=====================================================================================================================
=====================================================================================================================

UNIT 7 : CONNECTING TO LDAP SERVER

*Lightweight Directory Access Protocol*

7.1 Understanding LDAP
______________________


	>which login	:shows the full path of login command, i.e. /bin/login
	>ldd /bin/login	:shows all the shared libraries required by a command.



now we can see the pam library (libpam) which is like a plugin to the login command, and adds some functionality to login command.
its a pluggable authentication module.
the authentication module is listed present in /etc/pam.d direstory.
it contains configuration files for the different processes that relate to authentication.


